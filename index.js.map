{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '46850539-7e4ca2d811908faae801b6294';\nconst baseURL = \"https://pixabay.com/api/\";\n\nexport async function fetchData(userInput, page = 1, per_page = 15) { \n  const params = {\n    key: API_KEY,\n    q: userInput,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n    page,\n    per_page\n  };\n\n  const url = `${baseURL}`;\n\n  try {\n    const response = await axios.get(url, { params });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response ? error.response.statusText : error.message);\n  }\n}\n","// webformatURL — посилання на маленьке зображення для списку карток у галереї\n// largeImageURL — посилання на велике зображення для модального вікна\n// tags — рядок з описом зображення. Підійде для атрибута alt\n// likes — кількість вподобайок\n// views — кількість переглядів\n// comments — кількість коментарів\n// downloads — кількість завантажень\n\n\nexport function createGallery(arr) {\n    return arr.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n        <li class=\"gallery_item\" >\n            <a href=\"${largeImageURL}\">\n        <img src=\"${webformatURL}\" alt=\"${tags}\" width=\"360px\" >\n        </a>\n            <div class=\"gallery_data\">\n            <table>\n    <tr>\n    <th>Likes</th>\n    <th>Views</th>\n    <th>Comments</th>\n    <th>Downloads</th>\n  </tr>\n  <tr>\n    <td>${likes}</td>\n    <td>${views}</td>\n    <td>${comments}</td>\n    <td>${downloads}</td>\n  </tr>\n \n</table>\n</div>\n\n        </li>\n    `).join(\"\");\n}","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport { fetchData } from './js/pixabay-api';\nimport { createGallery } from './js/render-functions';\n\nconst form = document.querySelector(\".input-forme\");\nconst container = document.querySelector(\".gallery\");\nconst loadMoreBtn = document.querySelector(\"#div-load-btn\");\nconst lineLoader = document.querySelector(\".line-loader\");\nconst endMessage = document.querySelector(\"#end-message\");\n\nform.addEventListener(\"submit\", handleSubmit);\ndocument.querySelector('#load-btn').addEventListener('click', handleLoadMore);\n\nlet currentPage = 1;\nlet totalHits = 0;\nlet userInput = '';\n\nasync function handleSubmit(event) {\n    event.preventDefault();\n\n    userInput = document.querySelector('#input-user').value.trim();\n\n    if (userInput === '') {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please enter a search term.',\n        });\n        return;\n    }\n\n    container.innerHTML = '';\n    currentPage = 1;\n    endMessage.classList.add('invisible');\n    loadMoreBtn.classList.add('invisible');\n\n    try {\n        lineLoader.classList.remove('invisible');\n\n        const data = await fetchData(userInput.toLowerCase(), currentPage, 15);\n        console.log('API Response:', data);\n        totalHits = data.totalHits;\n        if (totalHits > 0) {\n            container.insertAdjacentHTML(\"beforeend\", createGallery(data.hits));\n            \n            const lightbox = new SimpleLightbox('.gallery a', {\n                captionsData: 'alt',\n                captionDelay: 250,\n            });\n            lightbox.refresh();\n\n            if (totalHits > 15) {\n                loadMoreBtn.classList.remove('invisible');\n            }\n        } else {\n            iziToast.info({\n                title: 'No Results',\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n            });\n        }\n        \n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Error fetching data',\n        });\n        console.error('Error fetching data:', error);\n        \n    } finally {\n        lineLoader.classList.add('invisible');\n    }\n\n    document.querySelector('#input-user').value = '';\n}\n\nasync function handleLoadMore() {\n    currentPage++;\n\n    try {\n        lineLoader.classList.remove('invisible');\n\n        const data = await fetchData(userInput.toLowerCase(), currentPage, 15);\n        console.log('API Response:', data);\n        container.insertAdjacentHTML(\"beforeend\", createGallery(data.hits));\n\n        const lightbox = new SimpleLightbox('.gallery a', {\n            captionsData: 'alt',\n            captionDelay: 250,\n        });\n        lightbox.refresh();\n\n        const galleryItem = document.querySelector(\".gallery_item\");\n        const cardHeight = galleryItem.getBoundingClientRect().height;\n\n        window.scrollBy({\n            top: cardHeight * 2,\n            behavior: 'smooth'\n        });\n\n        if ((currentPage * 15) >= totalHits) {\n            loadMoreBtn.classList.add('invisible');\n            endMessage.classList.remove('invisible');\n        }\n\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Error fetching more data',\n        });\n        console.error('Error fetching more data:', error);\n        \n    } finally {\n        lineLoader.classList.add('invisible');\n    }\n}\n"],"names":["API_KEY","baseURL","fetchData","userInput","page","per_page","params","url","axios","error","createGallery","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","container","loadMoreBtn","lineLoader","endMessage","handleSubmit","handleLoadMore","currentPage","totalHits","event","iziToast","data","SimpleLightbox","cardHeight"],"mappings":"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"}